Script started on Wed 25 Nov 2020 06:42:42 PM EST
]0;sulkunte@sulkunte-vm: ~[01;32msulkunte@sulkunte-vm[00m:[01;34m~[00m$ cat cronScriot[K[Kpt
#!/bin/bash
echo -n "$1 `whoami` " >> ~/cronlog
echo -n "$$ " >> ~/cronlog
echo "`date +%m-%d-%y_%H:%M:%S` " >> ~/cronlog
]0;sulkunte@sulkunte-vm: ~[01;32msulkunte@sulkunte-vm[00m:[01;34m~[00m$ crontab -l
# Edit this file to introduce tasks to be run by cron.
# 
# Each task to run has to be defined through a single line
# indicating with different fields when the task will be run
# and what command to run for the task
# 
# To define the time you can provide concrete values for
# minute (m), hour (h), day of month (dom), month (mon),
# and day of week (dow) or use '*' in these fields (for 'any').# 
# Notice that tasks will be started based on the cron's system
# daemon's notion of time and timezones.
# 
# Output of the crontab jobs (including errors) is sent through
# email to the user the crontab file belongs to (unless redirected).
# 
# For example, you can run a backup of all your user accounts
# at 5 a.m every week with:
# 0 5 * * 1 tar -zcf /var/backups/home.tgz /home/
# 
# For more information see the manual pages of crontab(5) and cron(8)
# 
# m h  dom mon dow   command
15 * * * * ~/cronScript Sachin
30 * * * * ~/cronScript Sachin
45 * * * * ~/cronScript Sachin

]0;sulkunte@sulkunte-vm: ~[01;32msulkunte@sulkunte-vm[00m:[01;34m~[00m$ cat cronScript2
#!/bin/bash
echo -n "$1 `whoami` "
echo -n "$$ "
echo "`date +%m-%d-%y_%H:%M:%S` "
]0;sulkunte@sulkunte-vm: ~[01;32msulkunte@sulkunte-vm[00m:[01;34m~[00m$ sudo crontab -l
[sudo] password for sulkunte: 
# Edit this file to introduce tasks to be run by cron.
# 
# Each task to run has to be defined through a single line
# indicating with different fields when the task will be run
# and what command to run for the task
# 
# To define the time you can provide concrete values for
# minute (m), hour (h), day of month (dom), month (mon),
# and day of week (dow) or use '*' in these fields (for 'any').# 
# Notice that tasks will be started based on the cron's system
# daemon's notion of time and timezones.
# 
# Output of the crontab jobs (including errors) is sent through
# email to the user the crontab file belongs to (unless redirected).
# 
# For example, you can run a backup of all your user accounts
# at 5 a.m every week with:
# 0 5 * * 1 tar -zcf /var/backups/home.tgz /home/
# 
# For more information see the manual pages of crontab(5) and cron(8)
# 
# m h  dom mon dow   command
10 * * * * ~sulkunte/cronScript2 Sachin >> ~sulkunte/cronlog
20 * * * * ~sulkunte/cronScript2 Sachin >> ~sulkunte/cronlog
30 * * * * ~sulkunte/cronScript2 Sachin >> ~sulkunte/cronlog

]0;sulkunte@sulkunte-vm: ~[01;32msulkunte@sulkunte-vm[00m:[01;34m~[00m$ cat cronlog
Sachin root 6521 11-25-20_15:20:01 
Sachin sulkunte 6589 11-25-20_15:30:01 
Sachin root 6591 11-25-20_15:30:01 
Sachin sulkunte 6690 11-25-20_15:45:01 
Sachin root 6846 11-25-20_16:10:01 
Sachin sulkunte 6882 11-25-20_16:15:01 
Sachin root 6917 11-25-20_16:20:02 
Sachin root 6988 Sachin sulkunte 6986 11-25-20_16:30:01 
11-25-20_16:30:01 
Sachin sulkunte 7085 11-25-20_16:45:01 
Sachin root 7240 11-25-20_17:10:01 
Sachin sulkunte 7275 11-25-20_17:15:01 
Sachin root 7310 11-25-20_17:20:01 
Sachin sulkunte 7380 11-25-20_17:30:01 
Sachin root 7382 11-25-20_17:30:01 
Sachin sulkunte 7478 11-25-20_17:45:01 
Sachin root 7634 11-25-20_18:10:01 
Sachin sulkunte 7669 11-25-20_18:15:01 
Sachin root 7704 11-25-20_18:20:02 
Sachin sulkunte 7773 Sachin root 7772 11-25-20_18:30:01 
11-25-20_18:30:01 
]0;sulkunte@sulkunte-vm: ~[01;32msulkunte@sulkunte-vm[00m:[01;34m~[00m$ exit
exit

Script done on Wed 25 Nov 2020 06:43:50 PM EST
